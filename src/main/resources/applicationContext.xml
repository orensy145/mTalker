<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!--  （xml命名空间）xmlns：prefix=“url”-->
    <!--  需要使用的namespace必须在xsi:schemaLocation中添加-->
    <!--<aop:aspectj-autoproxy></aop:aspectj-autoproxy>-->
    <context:component-scan base-package="core.*"></context:component-scan>
    <!-- scope="prototype" 多例模式，每从容器中获取bean时，都会创建新对象。默认是单例模式-->
    <!-- 单例模式
      -实现方式涉及几项考虑（是否懒加载，是否线程安全，效率）
      -单例对象中声明非常量属性，存在线程安全问题
      -线程安全解决方法：多例，ThreadLocal
    -->
    <bean id="student" class="core.entity.Student" scope="singleton">
        <property name="stuNo" value="2"></property>
        <property name="stuName" value="ls"></property>
        <property name="stuAge" value="17"></property>
    </bean>

    <bean id="logAfterXml" class="core.aop.LogAfterXml"></bean>
    <aop:config>
        <aop:pointcut id="afterShowHobby" expression="execution(public * showHobby(..))"/>
        <aop:advisor advice-ref="logAfterXml" pointcut-ref="afterShowHobby"></aop:advisor>
    </aop:config>

</beans>